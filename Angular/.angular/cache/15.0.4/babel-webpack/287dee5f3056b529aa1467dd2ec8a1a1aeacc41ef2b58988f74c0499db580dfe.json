{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nfunction CustomersComponent_table_1_tr_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\")(8, \"button\", 4);\n    i0.ɵɵlistener(\"click\", function CustomersComponent_table_1_tr_10_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const c_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r3.getOrders(c_r2));\n    });\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const c_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", c_r2.id, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", c_r2.name, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", c_r2.email, \" \");\n  }\n}\nfunction CustomersComponent_table_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 2)(1, \"thead\")(2, \"tr\")(3, \"th\");\n    i0.ɵɵtext(4, \" ID \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\");\n    i0.ɵɵtext(6, \" Name \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\");\n    i0.ɵɵtext(8, \" Email \");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(9, \"tbody\");\n    i0.ɵɵtemplate(10, CustomersComponent_table_1_tr_10_Template, 9, 3, \"tr\", 3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(10);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.customers._embedded.customers);\n  }\n}\nexport class CustomersComponent {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.customers = [];\n  }\n  ngOnInit() {\n    this.httpClient.get(\"http://localhost:8888/CUSTOMER-SERVICE/customers\").subscribe({\n      next: data => {\n        this.customers = data;\n      },\n      error: err => {\n        console.log(\"error happened: \", err);\n      },\n      complete: () => {\n        console.log(\"loaded all the customers!\");\n      }\n    });\n  }\n}\nCustomersComponent.ɵfac = function CustomersComponent_Factory(t) {\n  return new (t || CustomersComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\nCustomersComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CustomersComponent,\n  selectors: [[\"app-customers\"]],\n  decls: 2,\n  vars: 1,\n  consts: [[1, \"container\"], [\"class\", \"table\", 4, \"ngIf\"], [1, \"table\"], [4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-success\", 3, \"click\"]],\n  template: function CustomersComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, CustomersComponent_table_1_Template, 11, 1, \"table\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.customers);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IAUMA,0BAAoD;IAC7CA,YAAS;IAAAA,iBAAK;IACnBA,0BAAI;IAACA,YAAW;IAAAA,iBAAK;IACrBA,0BAAI;IAACA,YAAY;IAAAA,iBAAK;IACtBA,0BAAI;IAC8BA;MAAA;MAAA;MAAA;MAAA,OAASA,qCAAY;IAAA,EAAC;IAAEA,iBAAS;;;;IAJ9DA,eAAS;IAATA,wCAAS;IACTA,eAAW;IAAXA,0CAAW;IACXA,eAAY;IAAZA,2CAAY;;;;;IAZvBA,gCAAuC;IAG5BA,oBAAG;IAAAA,iBAAK;IACbA,0BAAI;IAACA,sBAAK;IAAAA,iBAAK;IACfA,0BAAI;IAACA,uBAAM;IAAAA,iBAAK;IAGpBA,6BAAO;IACLA,2EAOK;IACPA,iBAAQ;;;;IARYA,gBAAgC;IAAhCA,8DAAgC;;;ACFxD,OAAM,MAAOC,kBAAkB;EAI7BC,YAAoBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;IAF9B,cAAS,GAAK,EAAE;EAIhB;EAEAC,QAAQ;IACN,IAAI,CAACD,UAAU,CAACE,GAAG,CAAC,kDAAkD,CAAC,CAACC,SAAS,CAAC;MAChFC,IAAI,EAAGC,IAAQ,IAAI;QAAG,IAAI,CAACC,SAAS,GAAGD,IAAI;MAAE,CAAC;MAC9CE,KAAK,EAAGC,GAAO,IAAI;QAAGC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAACF,GAAG,CAAC;MAAE,CAAC;MAC5DG,QAAQ,EAAE,MAAK;QAAGF,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;MAAE;KAC7D,CAAC;EACJ;;AAdWZ,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA,kBAAkB;EAAAc;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDR/BnB,8BAAuB;MACrBA,wEAkBQ;MACVA,iBAAM;;;MAnBkBA,eAAe;MAAfA,oCAAe","names":["i0","CustomersComponent","constructor","httpClient","ngOnInit","get","subscribe","next","data","customers","error","err","console","log","complete","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\LENOVO\\Desktop\\ecom-web\\ecom-web-app\\src\\app\\customers\\customers.component.html","C:\\Users\\LENOVO\\Desktop\\ecom-web\\ecom-web-app\\src\\app\\customers\\customers.component.ts"],"sourcesContent":["<div class=\"container\">\n  <table class=\"table\" *ngIf=\"customers\">\n    <thead>\n      <tr>\n        <th> ID </th>\n        <th> Name </th>\n        <th> Email </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let c of customers._embedded.customers\">\n        <td> {{c.id}} </td>\n        <td> {{c.name}} </td>\n        <td> {{c.email}} </td>\n        <td>\n          <button class=\"btn btn-success\" (click)=\"getOrders(c)\"> </button>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-customers',\n  templateUrl: './customers.component.html',\n  styleUrls: ['./customers.component.css']\n})\nexport class CustomersComponent implements OnInit {\n\n  customers:any=[];\n\n  constructor(private httpClient: HttpClient){\n\n  }\n\n  ngOnInit(): void {\n    this.httpClient.get(\"http://localhost:8888/CUSTOMER-SERVICE/customers\").subscribe({\n      next: (data:any) => { this.customers = data; },\n      error: (err:any) => { console.log(\"error happened: \",err); },\n      complete: () => { console.log(\"loaded all the customers!\"); }\n    });\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}